// 실행 가능한 코드

// 자바스크립트 엔진은 실행 가능한 코드를 만나면 그 코드를 평가해서 실행 문맥으로 만듭니다.
// 실행 가능한 코드의 유형은
// 전역코드, 함수 코드, eval코드 입니다.

// 전역코드
// 전역코드는 window 아래에 정의된 함수를 말한다.

// 함수코드
// 함수코드 말 그대로 함수를 말한다.

// eval 코드는 eval 함수를 말한다.


// 실행 문맥의 구성
// 실행 문맥은 실행 가능한 코드가 실제로 실행되고 관리되는 영역으로 실행에 필요한 모든 정보를 컴포넌트 여러개가 나누에 관리하도록 만들어짐
// 그중에서 가장 중요한 컴포넌트는 렉시컬 환경 컴포넌트, 변수 환경 컴포넌트, 디스 바인딩 컴포넌트입니다.

// 실행 문맥
ExcutionContext = {
    // 렉시컬 환경 컴포넌트
    LexicalEnvironment: {},
    // 변수 환경 컴포넌트
    VariableEnvironment: {},
    // 디스 바인딩 컴포넌트
    ThisBinding: null,
}

// 렉시컬 환경 컴포넌트, 변수 환경 컴포넌트
// 렉시컬 환경 컴포넌트, 변수 환경 컴포넌트는 렉시컬 환경의 컴포넌트 입니다.
// 실제로 with문을 사용할 때를 제외하면 내부 값이 같으므로 똑같이 최급해도 무리가 없습니다.

// 디스 바인딩 컴포넌트
// 디스 바인딩 컴포넌트는 그 함수를 호출한 객체의 참조가 저장되는 곳입니다.
// 이것이 가리키는 값이 곧 해당 실행 문맥의 this가 됩니다.