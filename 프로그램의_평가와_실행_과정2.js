// 렉시컬 환경 컴포넌트의 구성
// 실행 문맥의 구성 요소인 렉시컬 환경 컴포넌트는 자바스크립트 엔진이 자바 스크립트 코드를 실행하기 위해 자원을 모아둔 곳
// 구체적인 함수 또는 블록의 유효 범위 안에 있는 식별자와 그 결괏값이 저장되는 곳
// 자바스크립트 엔진은 해당 자바스크립트 코드의 유효 범위 안에 있는 식별자와 그 식별자가 가리키는 값을 키와 값의 쌍으로 바인드해서(묶어서) 랙시컬 호나경 컴포넌트에 기록합니다.
// 렉시컬 환경 컴포넌트는 환경 레코드와 외부 렉시컬 환경 참조 컴포넌트로 구성되어 있습니다.

// 렉시컬 환경 컴포넌트
LexicalEnvironment: {
    // 환경 레코드
    EnvironmentRecord: {},
    // 외부 렉시컬 환경 참조
    OuterLexicalEnvironment Reference: {}
}

// 환경 레코드
// 유효 범위 안에 포함된 식별자를 기록하고 실행하는 영역
// 변수 객체와 매우 비슷한 역할 자바스크립트 엔진은 유효 범위 안의 식별자와 결괏겂을 바인드해서 환경 레코드에 기록

// 외부 렉시컬 환경 참조
// 자바스크립트는 함수 안에 함수를 충첩해서 정의할 수 있는 언어입니다.
// 딷라서 자바스크립트 엔진은 유효범위 너머의 유효 법위도 검색할 수 있어야 합니다.
// 외부 렉시컬 환경 참조에는 함수를 둘러싸고 있는 코드가 속한 렉시컬 환경 컴포넌트의 참조가 저장됩니다.
// 중첩된 함수 안에서 바깥 코드에 정의된 변수를 읽거나 써야할 때, 자바스크립트 엔진은 외부 렉시컬 환경 참조를 따라 한 단계씩 렉시컬 환경을 거슬러 올라가서 그 변수를 검색 합니다.


// 환경 레코드의 구섵
// 렉시컬 환경 컴포넌트의 구성 요소인 환경 레코드는 렉시컬 환경 안의 식별자와 그 식별자가 가리키는 값ㄷ이 묶음이 실제로 저장되는 영역입니다.
// 이 환경 레코드는 선언적 환경 레코드와 객체환경 레코드로 구성되어 있으며 저장되는 값의 유형에 따라 쓰임새가 달라집니다.

// 환경 레코드
EnvironmentRecord: {
    // 선언적 환경 레코드
    DeclarativeEnvironmentRecord: {},
    // 객체 환경 레코드
    ObjectEnvironmentRecord: {}
}

// 선언적 환경 레코드
// 선언적 환경 레코드는 실제로 함수와 변수, catch문의 식별자와 실행 결과가 저장되는 영역입니다.

// 객체 환경 레코드
// 선언적 환경 레코드가 식별자와 그 실행결과를 키와 값의 쌍으로 관리하는 반면
// 객체 환경 레코드는 실행 문맥 외부에 별도로 저장된 객체의 참조에서 데이터를 읽거나 씁니다.
// 즉  with문의 렉시컬 환경이나 전역 객체처럼 별도의 객체에 저장된 데이터는 그 객체가 가진 키와 값의 쌍을 복사해 오는 것이 아니라 그 객체 전체의 참조를 가져와서 객체 환경 레코드의
// binObject라는 프로퍼테에 바인드 하도록 만들어져 있습니다.